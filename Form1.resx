<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3ebvEN3m71rc5e6b3ebvzd3m
        7+3d5u/93ufw/d3n7+3d5u/N3ebvm93m71rd5u8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA3ebvJtzl753d5u/13ebv/93m
        7//e5/D/3ufw/97n8P/e5/D/3ebv/93m7//c5u7/3Obu/9zl7vXc5e6d3OXuJgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzNnnCtvm8Y3d5u/53ebv/93m
        8P/e5/D/3ufw/97n8P/e5/D/3ufw/97n8P/d5u//wMrb/7vE3f/Dzeb/zdfu/9Pd7v/N1+X5vMfZjY6Y
        tQoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH+TqybBzt/T2uTx/9vl
        8P/d5vH/3eby/93n8P/d5vD/3ebv/97n8P/d5u//3ebv/93m8P+bo7z/jZK6/6Co0/+msNz/qbLe/6Sr
        1/+jqtj/nqXP07nA1SYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACGnrgyl6jC69Ld
        8//U3/P/1+Hy/9nj8v/c5fP/3ebz/93m8v/d5vD/3ufw/93m7//d5u//3ebv/9vl7v/L1OD/xc3c/73H
        1v+pssr/l56//5igv/+0vND/3ebw697n8DIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhZ65JoSc
        t+u4xuH/ztj0/8/a8//Q3fT/09/z/9bi8//a5PP/3eXz/97m8v/e5/D/3ufw/97n8P/e5/D/3ebv/93m
        7//d5u//3ebv/93m7//d5vD/3eby/93m8P/d5u//3ebv697n8CYAAAAAAAAAAAAAAAAAAAAAAAAAAIij
        vgqEnrnTjaG//8jV8v/J1fP/x9Pz/8rX9P/N2fT/0t70/9jh9P/b5PP/3uby/97n8P/e5/D/3+jx/97n
        8f/e5/D/3ufw/97n8P/e5/D/3ufw/97n8P/d5u//3ufw/97n8P/e5/D/3ufw097n8AoAAAAAAAAAAAAA
        AAAAAAAAgpy2jYWeuf+js8//ydXz/8bS8//Dz/P/xdD0/8jU9P/O2fT/1N70/9jj8//d5vH/3ufw/9/o
        8f/f6PH/3+jx/9/o8f/f6PH/3+jx/9/o8f/f6PH/3ufw/97n8P/e5/D/3ujx/9/o8f/e5/H/3ufxjQAA
        AAAAAAAAAAAAALfW6CaRrMX5hp25/7vI4f/P2vT/ytXy/8XR8//E0fP/xdHz/87Y9P/R2vT/2ePz/9zl
        8v/f5/H/3+jx/9/o8f/f6PH/3+jx/9/o8f/f6PH/3+jx/97n8P/f6PH/3+jx/9/o8f/f6PH/3ufx/97n
        8//e5vT52+XzJgAAAAAAAAAAqsfbnYehvP+Inbj/0t3w/9Xf9f/T3vT/zdnz/8rV8//K1fT/zNfy/9Lc
        8v/Z4/X/2+Tz/97n8f/e5/D/3ufw/97n8P/f6PH/3+jx/97n8P/e5/D/3+jx/97n8P/e5/D/3ufw/97n
        8P/e5/D/3+fy/93l9P/Z4vOdAAAAALrV6xCUsMj1hJy4/52vxv/c5fX/2+P0/9ji8//T3fX/0Nvy/9Db
        8//U3/T/2OP0/9zl9P/e5/P/3ufx/+Dp8v/f6PL/3+jx/97n8P/e5/D/3ufw/9/o8f/g6fP/4Onz/+Dp
        8//h6vT/4Onz/+Dp8//e5/P/2uP0/8vV8fXO1/QQudbpWoqjvP9ziaX/usbX/97n8v/e5vL/3Oby/9Xe
        6f/Aytz/zdfn/9bg8v/b5fT/3ub0/9/n8v/e5/D/4Ony/+Hq8//g6fL/2OHq/9Xd6P/g6fL/4er0/+Hq
        9P/h6vT/4ur0/+Hr9P/i6/X/4er0/97n8//W3/L/z9nz/8vV81q41+qbfpaw/4CSrf/Z4+7/3+jx/+Hp
        8v/j6vH/5Obp/6iwvv+Tj5T/eXiD/5KWpv+3vsz/1t7p/9/o8f/g6fP/4er0/+Lq9P/g6fP/4Onz/+Hq
        9P/i6/P/4ur0/+Lq9P/j6vT/4uvz/+Hr9P/h6vT/3+f0/9vk9P/Q2vP/zNbzm7DN4s2BmrP/obHE/+Dp
        8//h6fP/4+nz/+7v8P+0tLr/g3Zu/7acf//Vu5j/zrmb/6aUhf91c3z/1tzl/+Hq9P/h6vT/4ev0/+Hr
        9f/j6/T/4ev0/+Lr9P/j6vT/4+r0/+Pq9P/i6vT/4+r0/+Pq8//g6fP/3eXz/9ji9P/U3vbNkKrC7Yee
        uv++y9v/4Onz/+Dp8//r7vH/4uDi/2tjZv+Ue2P/zrGO/+HIo//n0Kn/0LOQ/5eGeP+WmKb/4urz/+Lq
        9P/j6vT/4+r0/+Pq9P/i6/T/4ur0/+Lq9P/j6vT/5Ov0/+Xr9P/l6/T/5Orz/+Hq9P/e5/T/2+P0/9ff
        9O2MpL79hpu3/8zX5//h6vT/0dji/+fj5P+fn6r/a15W/5N7Yf/Cp4j/jX1x/5aCcP/RuZr/8e/p/8fJ
        zf/i6fL/4ur1/+Pr9P/j6/T/4uz0/+Pr9f/k6/T/5ev0/+Xr9P/m6/T/5uv0/+Tq9P/j6/T/5evy/5SZ
        qP9zcHv/kIiK/Yqjvf2Emrb/0Nzs/9nh7f+Pk6T/4d3d/3V3iP9jWlr/fmtb/7uhgf/MsI3/p5F5/7ac
        e/+qnI7/ioyZ/+Hp8v/i6vT/5ev0/+Pr9f/j6/X/5ez1/+fs9f/n7PX/5+z1/+fs9f/m6/T/5Or0/+Lr
        9P+9vsT/ZFtd/5+Ibv/VuZb9iKC77YqcuP/L1uf/ho+k/1xedf/Wz9D/eXqM/6uqrv/T0M3/xbqt/5d+
        Zf+OdFz/e2VP/2tcUv9bXnL/4+rz/+Lr9P/l7PT/5ev1/+Xs9P/l7PX/5+z1/+fs9f/n7PX/5+z1/+br
        9P/k6vT/6u3x/3V2gf92Y1P/tpp7/9W5lu2In7zNjZ+8/7bE2P9ncYn/RUlj/7mzt/+urbb/8vPy//X2
        9P/Dvrj/YVdZ/2NWUv9wW03/TklU/4CDk//j7PT/5Oz0/+bs9P/m7PX/5+z1/+fs9f/n7PX/5+z1/+fs
        9f/m7PX/5uv0/+Tr9P/e4OX/XFhg/3diT/+sknT/sJmCzYafvJuQor//prjP/4uXrP9ESGL/h4WT/723
        uv/l5eX/9fb0/8fFx/9QTVz/TklT/0hFUv9FR17/z8/V/+Xs9P/m7PX/5+z1/+fs9f/n7PX/5+z1/+fs
        9f/n7PX/5+z1/+br9P/k6/T/4+z0/8nK0f9VUl//aVtV/4RuW/+sk3ibiaC8WpSmwv+rw9n/wM/e/4OI
        nP9MT2f/pZ6o/7q1uf/T0tf/iYua/zs/WP84O1X/RUZe/5iXov/My9H/4+v1/+bs9f/m7PX/5ev0/+Pq
        8//m6/T/2N/p/+Xr9P/m7PX/5+z1/+bs9f/l7PT/xsbN/1pbbP+alZX/ppyV/6mai1qKob0QkKO/9bTR
        5v/D0+P/2+Lu/2pwhf9KTWb/hIKQ/6Cbo/+EgI3/dnWE/4N/jf+dl6H/lJOh/9PZ5P/m6/X/5+z1/+Xs
        9f/O1+T/0trm/+Ho8/+bqr//19/r/+Xr9f/n7PX/5ev1/+Tq8v/W1Nj/kZSj//X28//39fT19/bxEAAA
        AACSpcCdvdru/8DS4//k6/X/2eDs/3p+lP9GSmX/Skxo/2BgeP9jY3r/X2B2/2tvhv/O1OD/5Ov1/+Lo
        8f/m7Pb/3ubw/66/0v/Z4vH/yNPi/5Kowv+2w9X/5ev1/+fs9f/m7PX/2t7n/8fAwv+amqf/8/T0//X1
        9Z0AAAAAAAAAALPP5Sa92+/5uM7g/+Pr9v/l7PX/5Ov0/8jP3P+orr7/pKm7/6uwwf/Cx9X/0tjm/77F
        1//Z4ev/0Nji/+Tr9f/B0OD/scXc/9jg8P+0ydz/jKXA/5qsxP/k7PX/5+32/+bs9f/X3un/qaOu/7Oq
        sP+qqbT58vTzJgAAAAAAAAAAAAAAAL7b8I240uX/2+Tw/+Lp8//l7PX/5ez1/+Xs9f/X3ur/193p/8XM
        3f+0vNH/09zs/8LN2//b4+3/1d/r/7zV6P+vxNr/w8/h/7XS5f+Npr//jKK8/9Xe6//l7PX/2ODs/+Pq
        9P+Okqb/lI+d/7eutY0AAAAAAAAAAAAAAAAAAAAAvdvwCsDa79PO2ef/3OPs/9LY4v/g5/H/5Oz2/7vH
        1//l7Pf/5ez2/+Xs9v/j6/b/tMLT/+Hp9P/A0eL/wNvw/6zC2P+ww9n/utbr/4ylvv+Mo73/tcLV/+Xs
        9v/Dzdz/vcbX/8/W4/9uc4rTYmN4CgAAAAAAAAAAAAAAAAAAAAAAAAAAwNvvJsPT4+vm7Pb/5ez1/9HX
        4v/H0N3/ssTW/+Ts9v/n7fb/5+31/9ri7f+zx9n/1+Ds/7vU6P/B2/D/pr3V/7jT6f+61ur/jKS//4yi
        v/+XqcP/4ur1/8TO3f+Vorr/yNHh6+Xr9iYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMvdMuTs
        9uvm7Pb/5+z2/8/X5P+mus3/1t7q/+Xs9f/m7PX/zNjl/7bO4P/F1eT/wNvw/8Lb8f+71uv/wNvx/7rW
        6/+Mpb//jKK+/4ufuv/S3ez/usbV/5mpwuvEz+MyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA5ev2Jubs9tPn7PX/ztnm/73V6f/M1eP/0dfi/+Pr9P/B0+P/ts3h/7jP4f/C2/D/w9vw/8Lb
        8P+/3PD/utbr/42lv/+Mor7/ip67/7rF3v+yvtHTj6TAJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA5u32Cubs9o3L1+X5w9vw/9Dc6P/j6vT/z9bi/7jO4f+xy+D/udPp/8Lc
        8P/E3fH/w93x/8Dc8P+92u7/j6fC/4yivv+Lob35n63Ijc/c7woAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALzO3ibE3PGdytfm9ebt9v/b4u7/udDl/7fR
        5//A3PH/w93x/8Td8f/E3fH/wt3w/7/c7/+UrMb1i6C8nYeduSYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADb4/AQ5u32Ws/Z
        5ZvC3PDNv9nt7cPe8v3E3vL9xN7y7cTe8s3D3fGbwN3xWqjC2RAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//AP//+AAf/+AAB//AAAP/gAAB/wAAAP4AAAB8AAAAPAAAADgAAAAYAA
        AAGAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAABgAAAAYAAAAHAAAADwAAAA+AA
        AAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>